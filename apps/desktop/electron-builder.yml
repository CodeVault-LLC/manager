appId: no.codevault.manager
productName: Manager
artifactName: ${name}-${version}-${os}-${arch}.${ext}

publish: { provider: github, releaseType: draft, vPrefixedTagName: true }
forceCodeSigning: false

# native dependencies compiling gets triggered in ./scripts/prepare-native-deps.ts
npmRebuild: false

directories:
  buildResources: build
  output: ./dist

extraResources:
  - 'resources/proto/**'

files:
  - out/**
  - migrations/**
  - resources/**
  - '!**/.vscode/*'
  - '!src/*'
  - '!electron.vite.config.{js,ts,mjs,cjs}'
  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'
  - '!{.env,.env.*,.npmrc,pnpm-lock.yaml}'
  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'

compression: normal
asar: true
asarUnpack:
  - resources/**
  - out/**

win:
  executableName: Manager
  artifactName: ${name}-${version}-${arch}.${ext}
  icon: resources/icons/icon.ico
  target:
    - { target: nsis }

nsis:
  artifactName: ${name}-${version}-windows-${arch}-manager-installer.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always

mac:
  entitlementsInherit: build/entitlements.mac.plist
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  notarize: false
  icon: resources/icons/icon.icns
dmg:
  artifactName: ${name}-${version}.${ext}
  icon: resources/icons/icon.icns
linux:
  target:
    - AppImage
    - snap
    - deb
  maintainer: electronjs.org
  category: Utility
  icon: resources/icons/icon.icns

appImage:
  artifactName: ${name}-${version}-${arch}.${ext}

electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
