name: Build & Release

on:
  push:
    branches: [main, master, beta, alpha]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm install -g pnpm && pnpm install
        working-directory: apps/desktop

      - name: Get next semantic version
        id: get-version
        run: |
          VERSION=$(npx semantic-release --dry-run | grep -oP 'Release version: \K[0-9]+\.[0-9]+\.[0-9]+')
          echo "Detected release version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build:
    needs: version
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: npm install -g pnpm

      - run: pnpm install
        working-directory: apps/desktop

      - name: Patch package.json with version
        run: |
          node -e "let fs=require('fs');let p=require('./apps/desktop/package.json');p.version='${{ needs.version.outputs.version }}';fs.writeFileSync('./apps/desktop/package.json', JSON.stringify(p, null, 2));"

      - name: Build Electron app
        run: pnpm run build:${{ matrix.os == 'windows-latest' && 'windows-artifacts' || matrix.os == 'macos-latest' && 'macos-artifacts' || 'linux-artifacts' }}
        working-directory: apps/desktop

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-build-${{ matrix.os }}
          path: |
            apps/desktop/dist/*.exe
            apps/desktop/dist/*.dmg
            apps/desktop/dist/*.zip
            apps/desktop/dist/*.AppImage
            apps/desktop/dist/*.deb
            apps/desktop/dist/latest*.yml

  release:
    needs: [build]
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - run: npm install -g pnpm

      - run: pnpm install
        working-directory: apps/desktop

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-build-windows-latest
          path: apps/desktop/dist

      - name: Download macOS artifacts
        uses: actions/download-artifact@v4
        with:
          name: electron-build-macos-latest
          path: apps/desktop/dist

      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm run release
        working-directory: apps/desktop
